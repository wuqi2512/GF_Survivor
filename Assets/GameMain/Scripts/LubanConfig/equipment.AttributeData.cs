
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;
using SimpleJSON;


namespace cfg.equipment
{
public sealed partial class AttributeData : Luban.BeanBase
{
    public AttributeData(JSONNode _buf) 
    {
        { if(!_buf["Numeric"].IsNumber) { throw new SerializationException(); }  Numeric = (NumericType)_buf["Numeric"].AsInt; }
        { if(!_buf["Modifier"].IsNumber) { throw new SerializationException(); }  Modifier = (ModifierType)_buf["Modifier"].AsInt; }
        { var __json0 = _buf["Values"]; if(!__json0.IsArray) { throw new SerializationException(); } int _n0 = __json0.Count; Values = new float[_n0]; int __index0=0; foreach(JSONNode __e0 in __json0.Children) { float __v0;  { if(!__e0.IsNumber) { throw new SerializationException(); }  __v0 = __e0; }  Values[__index0++] = __v0; }   }
    }

    public static AttributeData DeserializeAttributeData(JSONNode _buf)
    {
        return new equipment.AttributeData(_buf);
    }

    public readonly NumericType Numeric;
    public readonly ModifierType Modifier;
    public readonly float[] Values;
   
    public const int __ID__ = -54861850;
    public override int GetTypeId() => __ID__;

    public  void ResolveRef(Tables tables)
    {
        
        
        
    }

    public override string ToString()
    {
        return "{ "
        + "Numeric:" + Numeric + ","
        + "Modifier:" + Modifier + ","
        + "Values:" + Luban.StringUtil.CollectionToString(Values) + ","
        + "}";
    }
}

}
